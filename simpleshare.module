<?php

/**
 * Implementation of hook_init().
 *
 * @todo Come up with smarter inclusion of CSS/JS. Including on the
 * hook_context_links_alter() level won't work as it is too late in the page
 * build.
 */
function simpleshare_init() {
  drupal_add_js(drupal_get_path('module', 'simpleshare') .'/simpleshare.js');
  drupal_add_css(drupal_get_path('module', 'simpleshare') .'/simpleshare.css');
}

/**
 * Implementation of hook_help().
 */
function simpleshare_help($path, $arg) {
  if ($path == 'admin/settings/simpleshare') {
    return t('Choose share methods that should be available to users. For actually showing a share link, configure workflow settings of content types or use Views to add a "Simple Share link" field to your listing.');
  }
}

/**
 * Implementation of hook_menu().
 */
function simpleshare_menu() {
  $items = array();
  $items['simpleshare'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'simpleshare_service_links',
    'page arguments' => array(),
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
  );
  $items['admin/settings/simpleshare'] = array(
    'title' => 'Simpleshare',
    'description' => 'Control simpleshare sharing methods.',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('simpleshare_admin_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'simpleshare.admin.inc',
  );
  return $items;
}

/**
 * Implementation of hook_views_api().
 */
function simpleshare_views_api() {
  return array(
    'api' => '2.0',
    'path' => drupal_get_path('module', 'simpleshare') .'/views',
  );
}

/**
 * Implementation of hook_form_alter().
 */
function simpleshare_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'node_type_form') {
    $form['workflow']['simpleshare_enabled'] = array(
      '#type' => 'radios',
      '#title' => t('Simple Share'),
      '#description' => t('If checked, offers Share link on full node views. Choose which share methods to expose on the !settings_form.', array('!admin_form' => l(t('Simple Share settings form'), 'admin/settings/simpleshare'))),
      '#options' => array(0 => t('Disabled'), 1 => t('Enabled')),
      '#default_value' => variable_get('simpleshare_enabled_'. $form['#node_type']->type, 0),
    );
  }
}

/**
 * Implementation of hook_link().
 */
function simpleshare_link($type, $object, $teaser = FALSE) {
  if ($type == 'node' && variable_get('simpleshare_enabled_'. $object->type, 0)) {
    return array(
      'simpleshare' => array(
        'title' => t('Share'),
        'href' => "node/{$object->nid}",
        'absolute' => TRUE,
        'attributes' => array(
          'title' => check_plain($object->title),
          'class' => 'simpleshare',
        ),
      ),
    );
  }
}

/**
 * Implementation of hook_context_link_alter()
 */
function simpleshare_context_links_alter(&$links) {
  if ($plugin = context_get_plugin('reaction', 'simpleshare_link')) {
    $plugin->execute($links);
  }
}

/**
 * Implementation of hook_ctools_plugin_plugins().
 */
function simpleshare_ctools_plugin_plugins() {
  return array(
    'cache' => TRUE,
    'use hooks' => TRUE,
  );
}

/**
 * Implementation of hook_context_plugins().
 */
function simpleshare_context_plugins() {
  $plugins = array();
  $plugins['simpleshare_reaction_link'] = array(
    'handler' => array(
      'path' => drupal_get_path('module', 'simpleshare'),
      'file' => 'simpleshare_reaction_link.inc',
      'class' => 'simpleshare_reaction_link',
      'parent' => 'context_reaction',
    ),
  );
  return $plugins;
}

/**
 * Implementation of hook_context_registry().
 */
function simpleshare_context_registry() {
  return array(
    'reactions' => array(
      'simpleshare_link' => array(
        'title' => t('Simple share link'),
        'description' => t('Show a simple share link.'),
        'plugin' => 'simpleshare_reaction_link',
      ),
    ),
  );
}

/**
 * AJAX callback for generating service links.
 */
function simpleshare_service_links() {
  if (isset($_GET['url'], $_GET['title']) &&
     (_simpleshare_local_url($_GET['url']) || variable_get('simpleshare_non_local_url', FALSE))) {
    $title = filter_xss($_GET['title']);
    $url = check_url($_GET['url']);

    $methods = variable_get('simpleshare_methods', simpleshare_methods());
    $urls = array();
    foreach ($methods as $key => $val) {
      if ($val) {
        $urls[$key] = $url;
      }
    }
    drupal_alter('simpleshare_service_urls', $urls);

    $links = array();
    if ($methods['twitter']) {
      $url = $urls['twitter'];
      $short_url = _simpleshare_short_url($url);
      $full_short = "{$title} ({$short_url})";
      
      $links['twitter'] = array(
        'title' => t('Twitter'),
        'href' => 'http://twitter.com',
        'query' => 'status='. $full_short,
        'attributes' => array('target' => '_blank'),
      );
    }
    if ($methods['facebook']) {
      $url = $urls['facebook'];

      $links['facebook'] = array(
        'title' => t('Facebook'),
        'href' => 'http://facebook.com/share.php',
        'query' => 'u='. urlencode($url),
        'attributes' => array('target' => '_blank'),
      );
    }
    if ($methods['myspace']) {
      $url = $urls['myspace'];
      $full = "{$title} ({$url})";

      $links['myspace'] = array(
        'title' => t('MySpace'),
        'href' => 'http://www.myspace.com/index.cfm',
        'query' => 'fuseaction=postto&t='. urlencode($title) .
                   '&c='. urlencode($full) .
                   '&u='. urlencode($url),
        'attributes' => array('target' => '_blank'),
      );
    }
    if ($methods['delicious']) {
      $url = $urls['delicious'];

      $links['delicious'] = array(
        'title' => t('Delicious'),
        'href' => 'http://delicious.com/save',
        'query' => 'v=5&noui&jump=close&url='. urlencode($url) .
                   '&title='. urlencode($title),
        'attributes' => array('target' => '_blank'),
      );
    }
    if ($methods['email']) {
      $url = $urls['email'];
      $full = "{$title} ({$url})";

      $links['email'] = array(
        'title' => t('E-mail'),
        'href' => 'mailto:',
        // @TODO: test with more mail clients. Firefox -> Gmail integration
        // does not like urlencode()'d strings.
        'query' => array('Subject' => $title, 'Body' => $full),
        'attributes' => array('target' => '_blank'),
      );
    }
    drupal_alter('simpleshare_service_links', $links);
    $links = theme('links', $links);
    print theme('simpleshare_popup', $links, $title);
  }
  exit;
}

/**
 * Enumerate all available methods.
 *
 * Use variable_get('simpleshare_methods', array_keys(simpleshare_methods())) to
 * get the keys of all enabled methods.
 */
function simpleshare_methods() {
  return array(
    'email' => t('Email'),
    'delicious' => t('Delicious'),
    'facebook' => t('Facebook'),
    'twitter' => t('Twitter'),
    'myspace' => t('MySpace'),
  );
}

/**
 * Push URL through a URL shortening service.
 */
function _simpleshare_short_url($url, $reset = FALSE) {
  static $short_urls = array();
  if ($short_urls[$url] && !$reset) {
    return $short_urls[$url];
  }
  // @TODO make this configurable
  // $api = "http://is.gd/api.php?longurl={$url}";
  $api = "http://tinyurl.com/api-create.php?url={$url}";

  if (function_exists('curl_init')) {
    $session = curl_init();
    curl_setopt($session, CURLOPT_URL, $api);
    curl_setopt($session, CURLOPT_RETURNTRANSFER, 1);
    $short_urls[$url] = curl_exec($session);
    curl_close($session);
  }
  return $short_urls[$url];
}

/**
 * Make sure URL is a local URL.
 */
function _simpleshare_local_url($url) {
  return ($_SERVER['HTTP_HOST'] == parse_url($url, PHP_URL_HOST));
}

/**
 * Implementation of hook_theme().
 */
function simpleshare_theme() {
  return array('simpleshare_popup' => array());
}

/**
 * Theme a share popup box.
 */
function theme_simpleshare_popup($service_links, $text) {
  $output = "<div class='simpleshare-popup clear-block'>";
  $output .= "<span class='close'>". t('Close') ."</span>";
  $output .= "<h2>{$text}</h2>";
  $output .= $service_links;
  $output .= "</div>";
  return $output;
}
